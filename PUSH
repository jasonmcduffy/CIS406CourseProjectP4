// Jason McDuffy
// CIS 406 Week 9 Lab: Course Project Phase 4
// February 26, 2024

package orderEntryPhase4;

import java.util.Scanner;
import java.util.InputMismatchException;

public class OrderEntryPhase4
{

	public static void main(String[] args)
	{
		// Local variables
		final int MAX_ITEMS = 10;
		String[] itemNumber = new String[MAX_ITEMS];
		String[] itemDescription = new String[MAX_ITEMS];
		double[] itemPrice = new double[MAX_ITEMS];
		int[] quantityOrdered = new int[MAX_ITEMS];
		double[] grossAmount = new double[MAX_ITEMS];
		double[] taxPercentage = new double[MAX_ITEMS];
		double[] taxAmount = new double[MAX_ITEMS];
		double[] discountPercent = new double[MAX_ITEMS];
		double[] discountAmount = new double[MAX_ITEMS];
		double[] netAmount = new double[MAX_ITEMS];
		
		// New Code for Phase 3
		String response = "?";
		char moreItems = 'y';
		int itemCount = 0;
		double totalGrossAmount = 0;
		double totalTaxAmount = 0;
		double totalDiscountAmount = 0;
		double totalNetAmount = 0;
		
		// Input data needed
		Scanner input = new Scanner(System.in);
		
		// Get customer data
		System.out.print("Please enter Invoice Date (MM/DD/YYYY): ");
		String invoiceDate = input.nextLine();
		System.out.print("Please enter Customer Name: ");
		String customerName = input.nextLine();
		System.out.print("Please enter Customer Street Address: ");
		String customerStreet = input.nextLine();
		System.out.print("Please enter Customer City: ");
		String customerCity = input.nextLine();
		System.out.print("Please enter Customer State Code (2 chars): ");
		String customerState = input.nextLine();
		System.out.print("Please enter Customer Zip Code (5 digits): ");
		String customerZipCode = input.nextLine();
		System.out.println();
		
		// Get items for order
		while (moreItems != 'n' && moreItems != 'N')
		{
			try
			{
				System.out.print("Please enter Item Number: ");
				itemNumber[itemCount] = input.nextLine();
				
				System.out.print("Please enter Item Desctiption: ");
				itemDescription[itemCount] = input.nextLine();
				
				System.out.print("Please enter Item Price: ");
				itemPrice[itemCount] = input.nextDouble();
				
				System.out.print("Please enter Quantity Ordered: ");
				quantityOrdered[itemCount] = input.nextInt();
				
				System.out.print("Please enter Tax Percentage: ");
				taxPercentage[itemCount] = input.nextDouble();
				
				System.out.print("Please enter Discount Percent: ");
				discountPercent[itemCount] = input.nextDouble();
			}
					
		
			catch (InputMismatchException e)
			{
				System.out.println("Input format error!");
				e.printStackTrace();	
			}
			
			// Calculaions
			grossAmount[itemCount] = itemPrice[itemCount] * quantityOrdered[itemCount]; // gross amount, no tax yet
			taxAmount[itemCount] = grossAmount[itemCount] * taxPercentage[itemCount] / 100.0;
			grossAmount[itemCount] += taxAmount[itemCount]; // tax is added
			discountAmount[itemCount] = grossAmount[itemCount] * discountPercent[itemCount] / 100.0;
			netAmount[itemCount] = grossAmount[itemCount] +taxAmount[itemCount] - discountAmount[itemCount]; // discount is applied
		
			// Update accumulator variables
			totalGrossAmount += grossAmount[itemCount];
			totalTaxAmount += taxAmount[itemCount];
			totalDiscountAmount += discountAmount[itemCount];	
			totalNetAmount += netAmount[itemCount];
			itemCount++;
			
			// See if there are more items
			System.out.print("\nMore  items? (y/n): ");
			moreItems = input.next().charAt(0);
			response = input.nextLine();
			
		}
		// No more input, all done
		input.close();
		
		// Output invoice date and customer data
		System.out.println();
		System.out.println("Invoice Date: " + invoiceDate + "\n");
		System.out.println("Customer Name\t\t"+
						   "Customer Street\t\t" +
						   "Customer City\t\t" +
						   "Customer State\t\t" +
						   "Customer Zip Code");
		System.out.println("------------\t\t" +
						   "-------------\t\t" +
						   "------------\t\t" +
						   "-------------\t\t" +
						   "----------------\t\t");
		System.out.println(customerName + "\t\t\t" +
						   customerStreet + "\t\t" +
						   customerCity + "\t\t\t" +
						   customerState + "\t\t\t" +
						   customerZipCode + "\t\t\n");
		
		// Output item headings
		System.out.println("Item Number\t" +
		           		   "Item Description\t" +
		           		   "Item Price\t" +
		           		   "Quantity\t" +
		           		   "Gross Amount\t\t"  +
		           		   "Tax %\t\t" +
		           		   "Tax Amount\t" +
		           		   "Discount %\t" +
		           		   "Discount Amount\t\t" +
		           		   "Net Amount");
		System.out.println("-----------\t" +
		           		   "----------------\t" +
		           		   "----------\t" +
		           		   "--------\t" +
		           		   "-----------\t\t" +
		           		   "-----\t\t" +
		           		   "----------\t" +
		           		   "----------\t" +
		           		   "---------------\t\t" +
		           		   "----------");
		// Display all the items for the order.	
				for (int i = 0; i < itemCount; i++)
				{
					System.out.println(itemNumber[i] + "\t\t" +
						               itemDescription[i] + "\t\t\t" +
						               "$" + itemPrice[i] + "\t\t" +
						               quantityOrdered[i] + "\t\t" +
						               grossAmount[i] + "\t\t\t" +
						               taxPercentage[i] + "\t\t" +
						               "$" + taxAmount[i] + "\t\t" +
						               discountPercent[i] + "\t\t" +
						               "$" + discountAmount[i] + "\t\t\t" +
						               "$" + netAmount[i]);
				}
				// Display new totals
				System.out.println("\nTotals \t" +
								   "# items = " + itemCount + "\t\t" +
								   "\t\t" +
								   "\t\t" +
								   "\t" + totalGrossAmount + "\t\t" +
								   "\t\t\t" +
								   "$" + totalTaxAmount + "\t" +
								   "\t\t\t" +
								   "$" + totalDiscountAmount + "\t\t\t" +
								   "$"+ totalNetAmount);
	}

}
